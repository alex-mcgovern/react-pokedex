name: Test build deploy

on:
    workflow_dispatch:
    push:

permissions:
    id-token: write
    contents: read
    deployments: write

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    code_quality:
        name: "Code quality"
        timeout-minutes: 5
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: "Create .npmrc"
              shell: bash
              run: |
                  echo "@fortawesome:registry=https://npm.fontawesome.com/" > .npmrc
                  echo "//npm.fontawesome.com/:_authToken=${{ secrets.FONTAWESOME_TOKEN }}" >> .npmrc

            - name: Install
              run: npm ci --only=dev

            - name: Run checks
              run: npm run check

    cypress:
        name: "Cypress"
        timeout-minutes: 30
        runs-on: ubuntu-latest
        needs: code_quality
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: "Create .npmrc"
              shell: bash
              run: |
                  echo "@fortawesome:registry=https://npm.fontawesome.com/" > .npmrc
                  echo "//npm.fontawesome.com/:_authToken=${{ secrets.FONTAWESOME_TOKEN }}" >> .npmrc

            - name: Cypress
              uses: cypress-io/github-action@v6
              with:
                  build: npm run build
                  start: npm run preview
                  wait-on: http://localhost:3000
              env:
                  CYPRESS_BASE_URL: http://localhost:3000

    check_ref_name:
        name: "Check tag"
        runs-on: ubuntu-latest
        outputs:
            match: ${{ steps.check.outputs.match }}
        steps:
            - id: check
              run: echo "match=$(echo ${{ github.ref_name }} | grep -Pq
                  '^v[0-9]+\.[0-9]+\.[0-9]+' && echo true || echo false)" >>
                  "$GITHUB_OUTPUT"

    deploy:
        name: "Cloudflare Pages"
        runs-on: ubuntu-latest
        if: ${{ needs.check_ref_name.outputs.match == 'true' }}
        needs: [cypress, code_quality, check_ref_name]
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: "Create .npmrc"
              shell: bash
              run: |
                  echo "@fortawesome:registry=https://npm.fontawesome.com/" > .npmrc
                  echo "//npm.fontawesome.com/:_authToken=${{ secrets.FONTAWESOME_TOKEN }}" >> .npmrc

            - name: Build
              run: npm install && npm run build

            - name: Publish
              uses: cloudflare/pages-action@1
              with:
                  apiToken: ${{ secrets.CF_PAGES_TOKEN }}
                  accountId: ${{ secrets.CF_ACCOUNT_ID }}
                  projectName: react-pokedex
                  directory: dist
                  branch: main
                  gitHubToken: ${{ secrets.GITHUB_TOKEN }}
